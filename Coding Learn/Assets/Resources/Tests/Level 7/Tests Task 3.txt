using System;
using System.Collections.Generic;


public class Level7Task3
{
//<playerCode>
    public class Point
    {
        public int X;
        public int Y;

        public Point(int x, int y)
        {
            X = x;
            Y = y;
        }

        public override bool Equals(object obj)
        {
            var point=obj as Point;
            return X==point.X&&Y==point.Y;
        }
    }
    public bool isTaskCompleted()
    {
        var random = new Random();
        var maxCount = 100;
        var maxSize = 100;
        return Check(random, maxCount, maxSize)&& Check(random, maxCount, maxSize);
    }

    private bool Check(Random random, int maxCount, int maxSize)
    {
        var list=new List<Point>();
        for (int i = 0; i < random.Next(10,maxCount); i++)
        {
            list.Add(new Point(random.Next(maxSize), random.Next(maxSize)));
        }
        var addedPoint=new Point(random.Next(maxSize,2*maxSize), random.Next(maxSize, 2 * maxSize));
        var newList=new List<Point>();
        CopyAndAdd(list, newList, addedPoint);
        return newList.Count==list.Count+1&&ContainsRange(newList,list)&&newList.Contains(addedPoint);
    }
    public bool ContainsRange(List<Point> list,IEnumerable<Point> range)
    {
        foreach(var point in range)
        {
            if(!list.Contains(point))
                return false;
        }
        return true;
    }
    

}