%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 204f7232bb70d634c8c913e9d9dbea0a, type: 3}
  m_Name: 6
  m_EditorClassIdentifier: 
  <Title>k__BackingField:
    m_TableReference:
      m_TableCollectionName: 
    m_TableEntryReference:
      m_KeyId: 0
      m_Key: 
    m_FallbackState: 0
    m_WaitForCompletion: 0
    m_LocalVariables: []
  <Description>k__BackingField:
    m_TableReference:
      m_TableCollectionName: 
    m_TableEntryReference:
      m_KeyId: 0
      m_Key: 
    m_FallbackState: 0
    m_WaitForCompletion: 0
    m_LocalVariables: []
  <StartCode>k__BackingField: 'public List<int> GetSequence(int n)

    {


    }'
  <TestData>k__BackingField:
    <TestCode>k__BackingField: using System;\nusing System.Linq;\nusing System.Collections.Generic;\n\npublic
      class Level8Task1\n{\n//<playerCode>\n    public bool isTaskCompleted()\n   
      {\n        var random = new Random();\n        var maxSize = 25;\n        return
      Check(random, maxSize)&& Check(random, maxSize);\n    }\n\n    private bool
      Check(Random random, int maxSize)\n    {\n        var n = random.Next(maxSize);\n       
      List<int> list = GetSequence(n);\n        return list.GroupBy(x => x).Where(x
      => x.Key != x.Count()).Count() == 0;\n\n    }\n}
    <TestSettings>k__BackingField: {fileID: 11400000, guid: db8d7be98c2fe8d4487298176efef010, type: 2}
  <Tips>k__BackingField: []
  <Challenges>k__BackingField: {fileID: 11400000, guid: d743f68061c8a32419f677686c10b2e7, type: 2}
  references:
    version: 2
    RefIds: []
