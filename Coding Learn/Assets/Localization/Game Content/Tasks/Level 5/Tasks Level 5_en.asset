%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: e9620f8c34305754d8cc9a7e49e852d9, type: 3}
  m_Name: Tasks Level 5_en
  m_EditorClassIdentifier: 
  m_LocaleId:
    m_Code: en
  m_SharedData: {fileID: 11400000, guid: 69dc89b00f52a434288b13aa80382be3, type: 2}
  m_Metadata:
    m_Items: []
  m_TableData:
  - m_Id: 18500870144
    m_Localized: Copy arrays
    m_Metadata:
      m_Items: []
  - m_Id: 18513453056
    m_Localized: You need to implement a method that returns a copy of the passed
      array of apple sizes.
    m_Metadata:
      m_Items: []
  - m_Id: 18513453057
    m_Localized: Create a new array that is a copy of the original one.
    m_Metadata:
      m_Items: []
  - m_Id: 18513453058
    m_Localized: Loop through the original array and pass the values of each element
      to the new array.
    m_Metadata:
      m_Items: []
  - m_Id: 18513453059
    m_Localized: Select firewood
    m_Metadata:
      m_Items: []
  - m_Id: 18513453060
    m_Localized: "You need to implement a method that returns a bool array of the
      same size as the input array and the size of the field.\n  Depending on whether
      the size of the field is appropriate or not, the corresponding index in the
      output array must be true or false, respectively.\n  The log matches if its
      size is less than or equal to the size passed."
    m_Metadata:
      m_Items: []
  - m_Id: 18513453061
    m_Localized: Create a bool array whose length is equal to the given array of
      logs.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647360
    m_Localized: Fill the new array in the loop, comparing each element of the log
      array to the required length.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647361
    m_Localized: Mammoth Scam
    m_Metadata:
      m_Items: []
  - m_Id: 18517647362
    m_Localized: "You need to implement a method that chooses which card to play
      (or pass)\n  The available set of cards and the opponent's turn are passed
      as input.\n  You need to return the value of the card to fight back, or -1
      if the player passes .\n  It is necessary to move with a card with the lowest
      suitable value, i.e. a higher value than the card that the opponent looked
      like, or an ace if there is nothing else suitable.\n  The value of the cards
      is their number from 1 to 13. Ace, 2-10 ,jack, queen, king.\n  It should be
      remembered that although the ace has the lowest value, it is a card that beats
      all the others (except for the ace, respectively).\n  A player can have several
      cards with the same value."
    m_Metadata:
      m_Items: []
  - m_Id: 18517647363
    m_Localized: Compare the value of your cards with the value of your opponent's
      card.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647364
    m_Localized: Save Path
    m_Metadata:
      m_Items: []
  - m_Id: 18517647365
    m_Localized: You need to implement a method that converts an array of enums into
      an array of numbers for easier storage. An array of Direction enums is passed
      as input, which can be West, Nort, South, East.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647366
    m_Localized: Each Enum value also has a numeric value, starting with 0.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647367
    m_Localized: Check Array
    m_Metadata:
      m_Items: []
  - m_Id: 18517647368
    m_Localized: 'You need to implement a method that checks the array against criteria.
      Criteria: array is not null, array has at least 1 element, first element of
      array is not 0.'
    m_Metadata:
      m_Items: []
  - m_Id: 18517647369
    m_Localized: This is where the logical operators will help you. If you need to
      remember them, open the reference book.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647370
    m_Localized: 2D array
    m_Metadata:
      m_Items: []
  - m_Id: 18517647371
    m_Localized: "You need to implement a method that returns the desired element
      of a two-dimensional array. The input is a two-dimensional array, a color in
      the form of enum Color{Red,White,Grey}, and a shape in the form of enum Form{Gear,Triangle,Square}.
      \n  Color corresponds to the first coordinate, shape to the second."
    m_Metadata:
      m_Items: []
  - m_Id: 18517647372
    m_Localized: You could use nested loops.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647373
    m_Localized: Weight carried
    m_Metadata:
      m_Items: []
  - m_Id: 18517647374
    m_Localized: You need to implement a method that handles an array of the maximum
      carrying weight for a boat. You need to change the weight to -1 for boats that
      will not be able to carry the weight of the input. You need to return a modified
      copy of the array.
    m_Metadata:
      m_Items: []
  - m_Id: 18517647375
    m_Localized: Of course, you can't do without cycles! :)
    m_Metadata:
      m_Items: []
  references:
    version: 2
    RefIds: []
