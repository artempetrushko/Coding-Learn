{
  "Items": [
    {
      "Title": "Массивы в C#",
      "Info": "     Итак, на данный момент мы знаем, что такое переменная, как задаётся её тип и как переменную инициализировать. Теперь, когда мы знаем какие виды циклов имеются в C# и в чём их отличия, можно детально изучать вопросы, связанные с использованием <color=green>массивов</color> C#. Допустим, у вам необходимо хранить в вашей программе 10 целочисленных значений. С одной стороны, если вам не лень вы можете объявить 10 переменных типа int, инициализировать их и работать. А что делать, если требуется 100 значений или 1000? Можно сделать проще — объявить переменную-массив и хранить в ней все значения. <color=green>Массив</color> – это структура данных для хранения элементом определенного типа, имеющая фиксированный размер. Доступ к элементам массива производится по числовому индексу. ",
      "VideoTitles": " "
    },
    {
      "Title": "Объявление массивов",
      "Info": "    Для объявления массива, после указания типа его элементов, ставятся <color=green>квадратные скобки</color>:\n     int[] a1;\n     Перед использованием массив обязательно нужно <color=green>проинициализировать</color>, это можно сделать сразу, при его объявлении. Примеры объявления массивов на видео. ",
      "VideoTitles": "m1"
    },
    {
      "Title": "Доступ к элементам массива. Обход элементов массива.",
      "Info": "     Для обращения к элементам массива используются <color=green>индексы</color>. Индекс представляет номер элемента в массиве, при этом нумерация начинается с нуля, поэтому индекс первого элемента будет равен 0, индекс четвертого элемента - 3. При этом, если вы укажете индекс больше, чем максимально возможный, то будет выброшено исключение.\n     Обход элементов массива можно производить с помощью <color=green>циклов for, foreach и while</color>, последний самый неудобный для работы с массивами, его мы рассматривать не будем. Если вы работаете с циклом for, то для указания верхней границы инкрементируемой переменной можно воспользоваться <color=green>свойством Length</color> у массива. Каждый массив имеет свойство Length, которое хранит длину массива. Преимущество цикла for состоит в том, что в нем вы можете модифицировать элементы массива. ",
      "VideoTitles": "m2"
    }
  ]
}