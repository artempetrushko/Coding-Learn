using System;
using System.Collections.Generic;

public class Level3Task7
{
    private IEnumerator<bool> _enumerator;
    private int _index=0;
    private static Random random = new Random();
    public void ChooseNextItem()
    {
        _enumerator.MoveNext();
        if (_enumerator.Current)
            _index++;
    }
    public bool IsKeyFound()
    {
        if( _enumerator.Current)
            _index++;
        return _enumerator.Current;
    }
    public bool isTaskCompleted()
    {
        Init();
        var maxCount = 100;
        FoundKey(random.Next(1, maxCount));
        var firstCheck = (_enumerator.Current&&_index==1)||(!_enumerator.Current&&_index==0);
        _index = 0;
        FoundKey(random.Next(1, maxCount));
        var secondCheck = (_enumerator.Current && _index == 1) || (!_enumerator.Current && _index == 0);
        _index = 0;
        FoundKey(random.Next(1, maxCount));
        var thirdCheck = (_enumerator.Current && _index == 1) || (!_enumerator.Current && _index == 0);
        _index = 0;
        FoundKey(random.Next(1, maxCount));
        var fourthCheck = (_enumerator.Current && _index == 1) || (!_enumerator.Current && _index == 0);
        return firstCheck && secondCheck && thirdCheck && fourthCheck;
    }
    public void Init() => _enumerator = GetGenerator().GetEnumerator();
    public static IEnumerable<bool> GetGenerator()
    {
        yield return random.Next(100)<10;
    }
    //<playerCode>
}