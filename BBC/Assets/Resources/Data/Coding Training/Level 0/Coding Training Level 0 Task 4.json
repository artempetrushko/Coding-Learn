{
  "Items": [
    {
      "Title": "Типы float и double",
      "Info": "     Отлично, мы научились сохранять целые числа в переменные! Но что если нам нужно сохранить числа с дробной частью (или, как их ещё называют, числа с плавающей точкой)?\n     На помощь нам придут другие типы данных - <color=green>float</color> и <color=green>double</color>. В них можно записать как число как с дробной частью, так и без неё.",
      "VideoTitles": "Float Double"
    },
    {
      "Title": "Диапазон значений и размер в памяти",
      "Info": "     У вас мог возникнуть вопрос - а зачем нам использовать разные числовые типы, если они предназначены для одних и тех же данных?\n     Для хранения целых чисел и чисел с плавающей точкой предусмотрено довольно много типов данных. Каждый из них имеет свой <color=green>диапазон значений</color>. Например, double представляет собой число двойной (double) точности и способен хранить намного больше цифр после запятой, чем float (речь идёт о сотнях знаков!). Некоторые типы, наоборот, могут хранить числа из меньшего диапазона, чем, например, у int.\n     Это зависит от <color=green>кол-ва памяти</color>, выделенной под переменную. К примеру, каждая переменная типа int или float занимает 4 байта, а double - уже 8 байт! Поскольку память компьютера - ресурс <color=red>ограниченный</color>, при написании большой программы следует хорошенько подумать, где и какие типы данных подойдут лучше всего.",
      "VideoTitles": ""
    },
    {
      "Title": "Ключевое слово var",
      "Info": "     А теперь - минутка полезных лайфхаков! Если вы инициализируете переменную, то можно вместо типа данных указать ключевое слово <color=green>var</color>. Тогда <color=green>компилятор</color> (программа, которая собирает и запускает написанный нами код) определит тип переменной <color=green>автоматически</color>! Это крайне полезная возможность языка C#, которой пользоваться совсем не зазорно - применение var считается одной из хороших практик при написании кода!",
      "VideoTitles": "Var Usage"
    }
  ]
}