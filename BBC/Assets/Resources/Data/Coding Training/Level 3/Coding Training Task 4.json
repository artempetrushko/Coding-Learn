{
  "Items": [
    {
      "Title": "Логический тип bool",
      "Info": "     Мы с вами уже знаем немало условных выражений, которые оказываются крайне полезны в программировании. Всех их объединяет то, что они могут иметь два состояния - <color=green>быть истинными</color> и <color=green>быть ложными</color>. А потому они представляют собой <color=green>логический</color> тип данных - <color=green>bool</color>.",
      "VideoTitles": ""
    },
    {
      "Title": "Логический тип bool",
      "Info": "     Переменные типа <color=green>bool</color> могут принимать два значения - <color=green>true</color> (истина) и <color=green>false</color> (ложь). Эти же значения принимают и условные выражения, которые мы использовали ранее, поэтому их (выражения) можно присваивать переменным типа bool (их ещё называют <color=green>булевыми</color> переменными). Это позволяет сохранять результаты проверки на истинность и использовать в других условных конструкциях или возвращать в return.",
      "VideoTitles": "Branching Bool"
    },
    {
      "Title": "Логические конструкции и code-style",
      "Info": "     Несколько рекомендаций по коду для логических выражений и bool:\n     - Имена булевых переменных должны быть заданы в виде вопроса, на который можно дать ответ \"Да\" или \"Нет\" (например, isNumberEven - \"Число чётное?\");\n     - Лучше не давать имена с частицей not и не проверять, чем те или иные объекты/явления НЕ являются. Если нужно проверить <color=green>отрицательность</color> утверждения, поставьте перед булевой переменной или логическим выражением оператор <color=green>!</color> (логическое <color=green>НЕ</color>) (при использовании с логическим выржанием нужно предварительно обернуть его в круглые скобки);",
      "VideoTitles": "Branching Bool CodeStyle"
    },
    {
      "Title": "Логические конструкции и code-style",
      "Info": "     - Если вы в блоке if и в блоке else лишь возвращаете true или false, то лучше заменить всю эту конструкцию на <color=green>return [условная конструкция];</color>. В процессе работы программы истинность выражения будет подсчитана и тут же возвращена из метода.",
      "VideoTitles": "Branching CodeStyle Return Bool"
    }
  ]
}