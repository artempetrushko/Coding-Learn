{
"Items": [
{
"Title": "Math functions. Exponentiation",
"Info": " Let's look at another useful function from the Math library - <color=green>Math.Pow()</color>. It allows you to raise a certain number x to a certain power y, and its name is an abbreviation for <color= green>power()</color> (in English, this word also means exponentiation).\n As arguments, the function takes numbers of the double type (or implicitly casts them to double), and at the output we also get double .",
"VideoTitles": "MathPow Function"
},
{
"Title": "Usage example",
"Info": " The Math.Pow() function will be indispensable for solving various computational problems. For example, for the rather popular task of <color=green>translating a number</color> from a <color=green>binary</color> number system to <color=green>decimal</color>.\n Recall the solution algorithm: For each digit of a binary number, you need to find out its ordinal number (digits are numbered <color=green>from right to left</color> and starting with <color=green> zero</color>). n These steps must be done for <color=green>each</color> digit in the number, and then add up all the results.As a result, we get the usual decimal number.",
"VideoTitles": ""
}
]
}
