{
  "Items": [
    {
      "Title": "2D array",
      "Info": "Now let's deal with <color=green>multidimensional arrays</color>. Theoretically, we can define an array with any number of dimensions (which, by the way, are called rank), but in practice, there are usually one-, two-, and many less often - three-dimensional arrays. Figuratively, a two-dimensional array can be represented as a regular table, and a three-dimensional array - as a cube of variables. For example, to specify a two-dimensional array of numbers (rank = 2), you need to make the following variable declaration:\n int[,] TwoDimArray ;",
      "VideoTitles": "m7"
    },

    {
      "Title": "2D array robot",
      "Info": " Pay attention to the comma in square brackets. In C#, there is a simple rule: the rank of an array is always one more than the number of commas in square brackets. Multidimensional arrays are initialized in the same way as one-dimensional arrays - you need to specify the number of elements in each dimension. Now to refer to as any element of the array, we need to specify two indices - <color=green>row index and column index</color>.Also, to work with multidimensional arrays, the <color=green>GetLength() function</ color>.GetLength returns the length of a given dimension of a multidimensional array Length returns the sum of the total number of elements in all dimensions For a two dimensional array, length == method getlength(0) * method getlength(1)",
      "VideoTitles": " "
    }
  ]
}