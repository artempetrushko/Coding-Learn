using System;
using System.Collections.Generic;
using System.Linq;

public class Level7Task1
{
    public bool isTaskCompleted()
    {
        var random = new Random();
        var maxCount = 1000;
        var maxSize = 10000;
        return Check(random, maxCount, maxSize)&& Check(random, maxCount, maxSize);
    }

    private bool Check(Random random, int maxCount, int maxSize)
    {
        var list = CreateArray(random, maxCount, maxSize).ToList();
        Shuffle(list);
        var dict=new Dictionary<int ,string>();
        for(int i = 0; i < list.Count; i++)
        {
            dict.Add(i, list[i]);
        }
        var testedList=CreateListFromDict(dict);
        return StringListEquals(list,testedList);
    }
    private bool StringListEquals(List<string> arr1, List<string> arr2)
    {
        if (arr1.Count != arr2.Count)
            return false;
        for (int i = 0; i < arr1.Count; i++)
            if (arr1[i] != arr2[i])
                return false;
        return true;
    }
    private static Random rng = new Random((int)DateTime.Now.Ticks & 0x0000FFFF);
    public static void Shuffle<T>(IList<T> list)
    {
        int n = list.Count;
        while (n > 1)
        {
            n--;
            int k = rng.Next(n + 1);
            T value = list[k];
            list[k] = list[n];
            list[n] = value;
        }
    }


    private static string[] CreateArray(Random random, int maxCount, int maxSize)
    {
        var array = new string[random.Next(maxCount)];
        for (int i = 0; i < array.Length; i++)
        {
            var val = $"{random.Next(maxSize)}";
            while (array.Contains(val))
            {
                val = $"{random.Next(maxSize)}";
            }
            array[i] = $"{random.Next(maxSize)}";
        }

        return array;
    }
    //<playerCode>
}