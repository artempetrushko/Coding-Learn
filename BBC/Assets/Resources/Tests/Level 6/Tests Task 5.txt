using System;
using System.Collections.Generic;
using System.Linq;

public class Level4Task1
{
    public bool isTaskCompleted()
    {
        var random = new Random();
        var maxCount = 1000;
        var maxSize = 10000;
        return Check(random, maxCount, maxSize)&& Check(random, maxCount, maxSize);
    }

    private bool Check(Random random, int maxCount, int maxSize)
    {
        var array = CreateArray(random, maxCount, maxSize);
        var testedArray = GetDecodedText(array);
        var firstCheck = new List<string>();
        foreach (var e in array)
        {
            if (char.IsLetter(e[0]))
            {
                firstCheck.Add(e);
            }
        }
        firstCheck.Reverse();
        return string.Join("", firstCheck).Equals(string.Join("",testedArray));
    }
    
    private static void ReplaceCharInString(ref String str, int index, Char newSymb)
    {
        str = str.Remove(index, 1).Insert(index, newSymb.ToString());
    }
    private static char[] CreateCharArray(Random random, int maxCount, int maxSize)
    {
        var array = new char[random.Next(maxCount)];
        for (var i = 0; i < array.Length; i++)
        {
            array[i] =(char) random.Next(33,123);
            if (random.Next(2) == 1)
            {
                array[i]=char.ToUpper(array[i]);
            }
        }

        return array;
    }
    private static string[] CreateArray(Random random, int maxCount, int maxSize)
    {
        var array = new string[random.Next(maxCount)];
        for (int i = 0; i < array.Length; i++)
        {
            array[i] = new string(CreateCharArray(random,maxCount,maxSize));
            if (random.Next(2) == 1)
            {
                var j=0;
                var str = array[i];
                ReplaceCharInString(ref str, j, char.ToUpper(str[j]));
            }
        }
        return array;
    }

}